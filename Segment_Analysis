/* 1. which are the top 10 and bottom 10 interests which have the largest composition values in any month_year? 
Only use the maximum composition value for each interest but you must keep the corresponding month_year */

WITH max_compositions AS(
SELECT
  interest_id,
  interest_metrics.month_year,
  interest_map.interest_name,
  interest_metrics.composition,
  MAX(composition) OVER(PARTITION BY interest_id) AS max_composition
FROM fresh_segments.interest_metrics
INNER JOIN fresh_segments.interest_map
  ON interest_metrics.interest_id = interest_map.id
),
final_compositions AS(
  SELECT 
    max_compositions.month_year,
    max_compositions.interest_name,
    max_compositions.max_composition
  FROM max_compositions
  WHERE max_composition = composition
)
--Enclose select statements in brackets when using order by for union. 
(SELECT * FROM final_compositions ORDER BY max_composition DESC LIMIT 10)
UNION 
(SELECT * FROM final_compositions ORDER BY max_composition LIMIT 10)
ORDER BY max_composition DESC;



/*2. Which 5 interests had the lowest average ranking value?*/
SELECT
  interest_map.interest_name,
  ROUND(AVG(ranking),1) AS average_ranking,
  COUNT(*) AS record_count
FROM fresh_segments.interest_metrics
INNER JOIN fresh_segments.interest_map
  ON interest_metrics.interest_id = interest_map.id
GROUP BY interest_map.interest_name
ORDER BY average_ranking
LIMIT 5;


/* 3. Which 5 interests had the largest standard deviation in their percentile_ranking value?*/
SELECT
  interest_metrics.interest_id,
  interest_map.interest_name,
  ROUND(CAST(STDDEV(percentile_ranking)AS NUMERIC),1) AS stddev_pc,
  MAX(percentile_ranking) AS max_pc,
  MIN(percentile_ranking) AS min_pc,
  COUNT(*) AS record_counts
FROM fresh_segments.interest_metrics
INNER JOIN fresh_segments.interest_map
  ON interest_metrics.interest_id = interest_map.id
WHERE month_year IS NOT NULL
GROUP BY 
  interest_metrics.interest_id,
  interest_map.interest_name
HAVING STDDEV(percentile_ranking) IS NOT NULL
ORDER BY stddev_pc DESC
LIMIT 5;

/* 4. For the 5 interests found in the previous question - 
what was minimum and maximum percentile_ranking values for each interest 
and its corresponding year_month value? 
Can you describe what is happening for these 5 interests?*/
WITH max_stddev_interests AS(
SELECT
  interest_metrics.interest_id,
  interest_map.interest_name,
  ROUND(CAST(STDDEV(percentile_ranking)AS NUMERIC),1) AS stddev_pc,
  MAX(percentile_ranking) AS max_pc
FROM fresh_segments.interest_metrics
INNER JOIN fresh_segments.interest_map
  ON interest_metrics.interest_id = interest_map.id
WHERE month_year IS NOT NULL
GROUP BY 
  interest_metrics.interest_id,
  interest_map.interest_name
HAVING STDDEV(percentile_ranking) IS NOT NULL
ORDER BY stddev_pc DESC
LIMIT 5
)
SELECT 
  t2.interest_name,
  t1.month_year,
  t1.ranking,
  t1.percentile_ranking,
  t1.composition,
  t2.stddev_pc,
  --RANKING to order the output in the same sequence as we obtained in previous question. 
  --Ordered in descending order for highest std_dev(percentile_ranking)
  RANK()OVER(ORDER BY stddev_pc DESC) AS max_stddev_ranking
FROM fresh_segments.interest_metrics AS t1 
INNER JOIN max_stddev_interests AS t2 
  ON t1.interest_id = t2.interest_id
ORDER BY 7, 4 DESC ;

